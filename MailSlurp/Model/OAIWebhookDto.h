#import <Foundation/Foundation.h>
#import "OAIObject.h"

/**
* MailSlurp API
* ## Introduction  [MailSlurp](https://www.mailslurp.com) is an Email API for developers and QA testers. It let's users: - create emails addresses on demand - receive emails and attachments in code - send templated HTML emails  ## About  This page contains the REST API documentation for MailSlurp. All requests require API Key authentication passed as an `x-api-key` header.  Create an account to [get your free API Key](https://app.mailslurp.com/sign-up/).  ## Resources - üîë [Get API Key](https://app.mailslurp.com/sign-up/)                    - üéì [Developer Portal](https://www.mailslurp.com/docs/)           - üì¶ [Library SDKs](https://www.mailslurp.com/docs/) - ‚úçÔ∏è [Code Examples](https://www.mailslurp.com/examples) - ‚ö†Ô∏è [Report an issue](https://drift.me/mailslurp)  ## Explore  
*
* The version of the OpenAPI document: 6.5.2
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/





@protocol OAIWebhookDto
@end

@interface OAIWebhookDto : OAIObject

/* Does webhook expect basic authentication? If true it means you created this webhook with a username and password. MailSlurp will use these in the URL to authenticate itself. [optional]
 */
@property(nonatomic) NSNumber* basicAuth;
/* When the webhook was created [optional]
 */
@property(nonatomic) NSDate* createdAt;
/* ID of the Webhook [optional]
 */
@property(nonatomic) NSString* _id;
/* The inbox that the Webhook will be triggered by [optional]
 */
@property(nonatomic) NSString* inboxId;
/* HTTP method that your server endpoint must listen for [optional]
 */
@property(nonatomic) NSString* method;
/* Name of the webhook [optional]
 */
@property(nonatomic) NSString* name;
/* JSON Schema for the payload that will be sent to your URL via the HTTP method described. [optional]
 */
@property(nonatomic) NSString* payloadJsonSchema;

@property(nonatomic) NSDate* updatedAt;
/* URL of your server that the webhook will be sent to. The schema of the JSON that is sent is described by the payloadJsonSchema. [optional]
 */
@property(nonatomic) NSString* url;

@end
