#import <Foundation/Foundation.h>
#import "OAIPageEntityAutomationItems.h"
#import "OAIPageEntityEventItems.h"
#import "OAIPageEntityFavouriteItems.h"
#import "OAIUserInfoDto.h"
#import "OAIApi.h"

/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails and SMS from dynamically allocated email addresses and phone numbers. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
*
* The version of the OpenAPI document: 6.5.2
* Contact: contact@mailslurp.dev
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIUserControllerApi: NSObject <OAIApi>

extern NSString* kOAIUserControllerApiErrorDomain;
extern NSInteger kOAIUserControllerApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// 
/// 
///
/// @param page Optional page index (optional) (default to @0)
/// @param size Optional page size (optional) (default to @20)
/// @param sort Optional createdAt sort direction ASC or DESC (optional) (default to @"DESC")
/// @param since Filter by created at after the given timestamp (optional)
/// @param before Filter by created at before the given timestamp (optional)
/// @param inboxId Optional inbox ID (optional)
/// @param phoneId Optional phone ID (optional)
/// @param filter Optional automation type filter (optional)
/// 
///  code:200 message:"OK"
///
/// @return OAIPageEntityAutomationItems*
-(NSURLSessionTask*) getEntityAutomationsWithPage: (NSNumber*) page
    size: (NSNumber*) size
    sort: (NSString*) sort
    since: (NSDate*) since
    before: (NSDate*) before
    inboxId: (NSString*) inboxId
    phoneId: (NSString*) phoneId
    filter: (NSString*) filter
    completionHandler: (void (^)(OAIPageEntityAutomationItems* output, NSError* error)) handler;


/// 
/// 
///
/// @param page Optional page index (optional) (default to @0)
/// @param size Optional page size (optional) (default to @20)
/// @param sort Optional createdAt sort direction ASC or DESC (optional) (default to @"DESC")
/// @param since Filter by created at after the given timestamp (optional)
/// @param before Filter by created at before the given timestamp (optional)
/// @param inboxId Optional inbox ID (optional)
/// @param emailId Optional email ID (optional)
/// @param phoneId Optional phone ID (optional)
/// @param smsId Optional SMS ID (optional)
/// @param attachmentId Optional attachment ID (optional)
/// @param filter Optional type filter (optional)
/// 
///  code:200 message:"OK"
///
/// @return OAIPageEntityEventItems*
-(NSURLSessionTask*) getEntityEventsWithPage: (NSNumber*) page
    size: (NSNumber*) size
    sort: (NSString*) sort
    since: (NSDate*) since
    before: (NSDate*) before
    inboxId: (NSString*) inboxId
    emailId: (NSString*) emailId
    phoneId: (NSString*) phoneId
    smsId: (NSString*) smsId
    attachmentId: (NSString*) attachmentId
    filter: (NSString*) filter
    completionHandler: (void (^)(OAIPageEntityEventItems* output, NSError* error)) handler;


/// 
/// 
///
/// @param page Optional page index (optional) (default to @0)
/// @param size Optional page size (optional) (default to @20)
/// @param sort Optional createdAt sort direction ASC or DESC (optional) (default to @"DESC")
/// @param since Filter by created at after the given timestamp (optional)
/// @param before Filter by created at before the given timestamp (optional)
/// @param filter Optional type filter (optional)
/// 
///  code:200 message:"OK"
///
/// @return OAIPageEntityFavouriteItems*
-(NSURLSessionTask*) getEntityFavoritesWithPage: (NSNumber*) page
    size: (NSNumber*) size
    sort: (NSString*) sort
    since: (NSDate*) since
    before: (NSDate*) before
    filter: (NSString*) filter
    completionHandler: (void (^)(OAIPageEntityFavouriteItems* output, NSError* error)) handler;


/// 
/// Utility function to extract properties from JSON objects in language where this is cumbersome.
///
/// @param _property JSON property name or dot separated path selector such as &#x60;a.b.c&#x60;
/// @param body 
/// 
///  code:200 message:"OK"
///
/// @return NSString*
-(NSURLSessionTask*) getJsonPropertyAsStringWithProperty: (NSString*) _property
    body: (NSObject*) body
    completionHandler: (void (^)(NSString* output, NSError* error)) handler;


/// 
/// Get account information for your user
///
/// 
///  code:200 message:"OK"
///
/// @return OAIUserInfoDto*
-(NSURLSessionTask*) getUserInfoWithCompletionHandler: 
    (void (^)(OAIUserInfoDto* output, NSError* error)) handler;



@end
