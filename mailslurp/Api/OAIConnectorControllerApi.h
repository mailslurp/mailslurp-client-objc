#import <Foundation/Foundation.h>
#import "OAIConnectorDto.h"
#import "OAIConnectorSyncEventDto.h"
#import "OAIConnectorSyncRequestResult.h"
#import "OAICreateConnectorOptions.h"
#import "OAIPageConnector.h"
#import "OAIPageConnectorSyncEvents.h"
#import "OAIApi.h"

/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
*
* The version of the OpenAPI document: 6.5.2
* Contact: contact@mailslurp.dev
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIConnectorControllerApi: NSObject <OAIApi>

extern NSString* kOAIConnectorControllerApiErrorDomain;
extern NSInteger kOAIConnectorControllerApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Create an inbox connector
/// Sync emails between external mailboxes and MailSlurp inboxes
///
/// @param createConnectorOptions 
/// 
///  code:201 message:"Created"
///
/// @return OAIConnectorDto*
-(NSURLSessionTask*) createConnectorWithCreateConnectorOptions: (OAICreateConnectorOptions*) createConnectorOptions
    completionHandler: (void (^)(OAIConnectorDto* output, NSError* error)) handler;


/// Delete an inbox connector
/// 
///
/// @param _id 
/// 
///  code:204 message:"No Content"
///
/// @return void
-(NSURLSessionTask*) deleteConnectorWithId: (NSString*) _id
    completionHandler: (void (^)(NSError* error)) handler;


/// Get all inbox connector sync events
/// 
///
/// @param page Optional page index in connector list pagination (optional) (default to @0)
/// @param size Optional page size in connector list pagination (optional) (default to @20)
/// @param sort Optional createdAt sort direction ASC or DESC (optional) (default to @"ASC")
/// @param since Filter by created at after the given timestamp (optional)
/// @param before Filter by created at before the given timestamp (optional)
/// 
///  code:200 message:"OK"
///
/// @return OAIPageConnectorSyncEvents*
-(NSURLSessionTask*) getAllConnectorSyncEventsWithPage: (NSNumber*) page
    size: (NSNumber*) size
    sort: (NSString*) sort
    since: (NSDate*) since
    before: (NSDate*) before
    completionHandler: (void (^)(OAIPageConnectorSyncEvents* output, NSError* error)) handler;


/// Get an inbox connector
/// 
///
/// @param _id 
/// 
///  code:200 message:"OK"
///
/// @return OAIConnectorDto*
-(NSURLSessionTask*) getConnectorWithId: (NSString*) _id
    completionHandler: (void (^)(OAIConnectorDto* output, NSError* error)) handler;


/// Get an inbox connector sync event
/// 
///
/// @param _id 
/// 
///  code:200 message:"OK"
///
/// @return OAIConnectorSyncEventDto*
-(NSURLSessionTask*) getConnectorSyncEventWithId: (NSString*) _id
    completionHandler: (void (^)(OAIConnectorSyncEventDto* output, NSError* error)) handler;


/// Get an inbox connector sync events
/// 
///
/// @param _id 
/// @param page Optional page index in connector list pagination (optional) (default to @0)
/// @param size Optional page size in connector list pagination (optional) (default to @20)
/// @param sort Optional createdAt sort direction ASC or DESC (optional) (default to @"ASC")
/// @param since Filter by created at after the given timestamp (optional)
/// @param before Filter by created at before the given timestamp (optional)
/// 
///  code:200 message:"OK"
///
/// @return OAIPageConnectorSyncEvents*
-(NSURLSessionTask*) getConnectorSyncEventsWithId: (NSString*) _id
    page: (NSNumber*) page
    size: (NSNumber*) size
    sort: (NSString*) sort
    since: (NSDate*) since
    before: (NSDate*) before
    completionHandler: (void (^)(OAIPageConnectorSyncEvents* output, NSError* error)) handler;


/// Get inbox connectors
/// List inbox connectors that sync external emails to MailSlurp inboxes
///
/// @param page Optional page index in connector list pagination (optional) (default to @0)
/// @param size Optional page size in connector list pagination (optional) (default to @20)
/// @param sort Optional createdAt sort direction ASC or DESC (optional) (default to @"ASC")
/// @param since Filter by created at after the given timestamp (optional)
/// @param before Filter by created at before the given timestamp (optional)
/// 
///  code:200 message:"OK"
///
/// @return OAIPageConnector*
-(NSURLSessionTask*) getConnectorsWithPage: (NSNumber*) page
    size: (NSNumber*) size
    sort: (NSString*) sort
    since: (NSDate*) since
    before: (NSDate*) before
    completionHandler: (void (^)(OAIPageConnector* output, NSError* error)) handler;


/// Sync an inbox connector
/// 
///
/// @param _id 
/// 
///  code:200 message:"OK"
///
/// @return OAIConnectorSyncRequestResult*
-(NSURLSessionTask*) syncConnectorWithId: (NSString*) _id
    completionHandler: (void (^)(OAIConnectorSyncRequestResult* output, NSError* error)) handler;


/// Update an inbox connector
/// 
///
/// @param _id 
/// @param createConnectorOptions 
/// 
///  code:200 message:"OK"
///
/// @return OAIConnectorDto*
-(NSURLSessionTask*) updateConnectorWithId: (NSString*) _id
    createConnectorOptions: (OAICreateConnectorOptions*) createConnectorOptions
    completionHandler: (void (^)(OAIConnectorDto* output, NSError* error)) handler;



@end
