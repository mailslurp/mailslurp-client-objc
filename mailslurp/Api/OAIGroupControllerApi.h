#import <Foundation/Foundation.h>
#import "OAICreateGroupOptions.h"
#import "OAIGroupContactsDto.h"
#import "OAIGroupDto.h"
#import "OAIGroupProjection.h"
#import "OAIPageContactProjection.h"
#import "OAIPageGroupProjection.h"
#import "OAIUpdateGroupContacts.h"
#import "OAIApi.h"

/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository
*
* The version of the OpenAPI document: 6.5.2
* Contact: contact@mailslurp.dev
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIGroupControllerApi: NSObject <OAIApi>

extern NSString* kOAIGroupControllerApiErrorDomain;
extern NSInteger kOAIGroupControllerApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Add contacts to a group
/// 
///
/// @param groupId 
/// @param updateGroupContacts 
/// 
///  code:200 message:"OK"
///
/// @return OAIGroupContactsDto*
-(NSURLSessionTask*) addContactsToGroupWithGroupId: (NSString*) groupId
    updateGroupContacts: (OAIUpdateGroupContacts*) updateGroupContacts
    completionHandler: (void (^)(OAIGroupContactsDto* output, NSError* error)) handler;


/// Create a group
/// 
///
/// @param createGroupOptions 
/// 
///  code:201 message:"Created"
///
/// @return OAIGroupDto*
-(NSURLSessionTask*) createGroupWithCreateGroupOptions: (OAICreateGroupOptions*) createGroupOptions
    completionHandler: (void (^)(OAIGroupDto* output, NSError* error)) handler;


/// Delete group
/// 
///
/// @param groupId 
/// 
///  code:204 message:"No Content"
///
/// @return void
-(NSURLSessionTask*) deleteGroupWithGroupId: (NSString*) groupId
    completionHandler: (void (^)(NSError* error)) handler;


/// Get all Contact Groups in paginated format
/// 
///
/// @param page Optional page index in list pagination (optional) (default to @0)
/// @param size Optional page size in list pagination (optional) (default to @20)
/// @param sort Optional createdAt sort direction ASC or DESC (optional) (default to @"ASC")
/// @param since Filter by created at after the given timestamp (optional)
/// @param before Filter by created at before the given timestamp (optional)
/// 
///  code:200 message:"OK"
///
/// @return OAIPageGroupProjection*
-(NSURLSessionTask*) getAllGroupsWithPage: (NSNumber*) page
    size: (NSNumber*) size
    sort: (NSString*) sort
    since: (NSDate*) since
    before: (NSDate*) before
    completionHandler: (void (^)(OAIPageGroupProjection* output, NSError* error)) handler;


/// Get group
/// 
///
/// @param groupId 
/// 
///  code:200 message:"OK"
///
/// @return OAIGroupDto*
-(NSURLSessionTask*) getGroupWithGroupId: (NSString*) groupId
    completionHandler: (void (^)(OAIGroupDto* output, NSError* error)) handler;


/// Get group and contacts belonging to it
/// 
///
/// @param groupId 
/// 
///  code:200 message:"OK"
///
/// @return OAIGroupContactsDto*
-(NSURLSessionTask*) getGroupWithContactsWithGroupId: (NSString*) groupId
    completionHandler: (void (^)(OAIGroupContactsDto* output, NSError* error)) handler;


/// 
/// Get group and paginated contacts belonging to it
///
/// @param groupId 
/// @param page Optional page index in group contact pagination (optional) (default to @0)
/// @param size Optional page size in group contact pagination (optional) (default to @20)
/// @param sort Optional createdAt sort direction ASC or DESC (optional) (default to @"ASC")
/// @param since Filter by created at after the given timestamp (optional)
/// @param before Filter by created at before the given timestamp (optional)
/// 
///  code:200 message:"OK"
///
/// @return OAIPageContactProjection*
-(NSURLSessionTask*) getGroupWithContactsPaginatedWithGroupId: (NSString*) groupId
    page: (NSNumber*) page
    size: (NSNumber*) size
    sort: (NSString*) sort
    since: (NSDate*) since
    before: (NSDate*) before
    completionHandler: (void (^)(OAIPageContactProjection* output, NSError* error)) handler;


/// Get all groups
/// 
///
/// 
///  code:200 message:"OK"
///
/// @return NSArray<OAIGroupProjection>*
-(NSURLSessionTask*) getGroupsWithCompletionHandler: 
    (void (^)(NSArray<OAIGroupProjection>* output, NSError* error)) handler;


/// Remove contacts from a group
/// 
///
/// @param groupId 
/// @param updateGroupContacts 
/// 
///  code:200 message:"OK"
///
/// @return OAIGroupContactsDto*
-(NSURLSessionTask*) removeContactsFromGroupWithGroupId: (NSString*) groupId
    updateGroupContacts: (OAIUpdateGroupContacts*) updateGroupContacts
    completionHandler: (void (^)(OAIGroupContactsDto* output, NSError* error)) handler;



@end
