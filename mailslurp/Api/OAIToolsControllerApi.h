#import <Foundation/Foundation.h>
#import "OAIGenerateBimiRecordOptions.h"
#import "OAIGenerateBimiRecordResults.h"
#import "OAIGenerateDmarcRecordOptions.h"
#import "OAIGenerateDmarcRecordResults.h"
#import "OAIGenerateMtaStsRecordOptions.h"
#import "OAIGenerateMtaStsRecordResults.h"
#import "OAIGenerateTlsReportingRecordOptions.h"
#import "OAIGenerateTlsReportingRecordResults.h"
#import "OAILookupBimiDomainOptions.h"
#import "OAILookupBimiDomainResults.h"
#import "OAILookupDmarcDomainOptions.h"
#import "OAILookupDmarcDomainResults.h"
#import "OAILookupMtaStsDomainOptions.h"
#import "OAILookupMtaStsDomainResults.h"
#import "OAILookupTlsReportingDomainOptions.h"
#import "OAILookupTlsReportingDomainResults.h"
#import "OAIApi.h"

/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
*
* The version of the OpenAPI document: 6.5.2
* Contact: contact@mailslurp.dev
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIToolsControllerApi: NSObject <OAIApi>

extern NSString* kOAIToolsControllerApiErrorDomain;
extern NSInteger kOAIToolsControllerApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Create a BIMI record policy
/// 
///
/// @param generateBimiRecordOptions 
/// 
///  code:200 message:"OK"
///
/// @return OAIGenerateBimiRecordResults*
-(NSURLSessionTask*) generateBimiRecordWithGenerateBimiRecordOptions: (OAIGenerateBimiRecordOptions*) generateBimiRecordOptions
    completionHandler: (void (^)(OAIGenerateBimiRecordResults* output, NSError* error)) handler;


/// Create a DMARC record policy
/// 
///
/// @param generateDmarcRecordOptions 
/// 
///  code:200 message:"OK"
///
/// @return OAIGenerateDmarcRecordResults*
-(NSURLSessionTask*) generateDmarcRecordWithGenerateDmarcRecordOptions: (OAIGenerateDmarcRecordOptions*) generateDmarcRecordOptions
    completionHandler: (void (^)(OAIGenerateDmarcRecordResults* output, NSError* error)) handler;


/// Create a TLS reporting record policy
/// 
///
/// @param generateMtaStsRecordOptions 
/// 
///  code:200 message:"OK"
///
/// @return OAIGenerateMtaStsRecordResults*
-(NSURLSessionTask*) generateMtaStsRecordWithGenerateMtaStsRecordOptions: (OAIGenerateMtaStsRecordOptions*) generateMtaStsRecordOptions
    completionHandler: (void (^)(OAIGenerateMtaStsRecordResults* output, NSError* error)) handler;


/// Create a TLS reporting record policy
/// 
///
/// @param generateTlsReportingRecordOptions 
/// 
///  code:200 message:"OK"
///
/// @return OAIGenerateTlsReportingRecordResults*
-(NSURLSessionTask*) generateTlsReportingRecordWithGenerateTlsReportingRecordOptions: (OAIGenerateTlsReportingRecordOptions*) generateTlsReportingRecordOptions
    completionHandler: (void (^)(OAIGenerateTlsReportingRecordResults* output, NSError* error)) handler;


/// Lookup a BIMI record policy
/// 
///
/// @param lookupBimiDomainOptions 
/// 
///  code:200 message:"OK"
///
/// @return OAILookupBimiDomainResults*
-(NSURLSessionTask*) lookupBimiDomainWithLookupBimiDomainOptions: (OAILookupBimiDomainOptions*) lookupBimiDomainOptions
    completionHandler: (void (^)(OAILookupBimiDomainResults* output, NSError* error)) handler;


/// Lookup a DMARC record policy
/// 
///
/// @param lookupDmarcDomainOptions 
/// 
///  code:200 message:"OK"
///
/// @return OAILookupDmarcDomainResults*
-(NSURLSessionTask*) lookupDmarcDomainWithLookupDmarcDomainOptions: (OAILookupDmarcDomainOptions*) lookupDmarcDomainOptions
    completionHandler: (void (^)(OAILookupDmarcDomainResults* output, NSError* error)) handler;


/// Lookup a MTA-STS domain policy
/// 
///
/// @param lookupMtaStsDomainOptions 
/// 
///  code:200 message:"OK"
///
/// @return OAILookupMtaStsDomainResults*
-(NSURLSessionTask*) lookupMtaStsDomainWithLookupMtaStsDomainOptions: (OAILookupMtaStsDomainOptions*) lookupMtaStsDomainOptions
    completionHandler: (void (^)(OAILookupMtaStsDomainResults* output, NSError* error)) handler;


/// Lookup a TLS reporting domain policy
/// 
///
/// @param lookupTlsReportingDomainOptions 
/// 
///  code:200 message:"OK"
///
/// @return OAILookupTlsReportingDomainResults*
-(NSURLSessionTask*) lookupTlsReportingDomainWithLookupTlsReportingDomainOptions: (OAILookupTlsReportingDomainOptions*) lookupTlsReportingDomainOptions
    completionHandler: (void (^)(OAILookupTlsReportingDomainResults* output, NSError* error)) handler;



@end
