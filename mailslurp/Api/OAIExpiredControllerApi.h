#import <Foundation/Foundation.h>
#import "OAIExpirationDefaults.h"
#import "OAIExpiredInboxDto.h"
#import "OAIPageExpiredInboxRecordProjection.h"
#import "OAIApi.h"

/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
*
* The version of the OpenAPI document: 6.5.2
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIExpiredControllerApi: NSObject <OAIApi>

extern NSString* kOAIExpiredControllerApiErrorDomain;
extern NSInteger kOAIExpiredControllerApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Get default expiration settings
/// Return default times used for inbox expiration
///
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return OAIExpirationDefaults*
-(NSURLSessionTask*) getExpirationDefaultsWithCompletionHandler: 
    (void (^)(OAIExpirationDefaults* output, NSError* error)) handler;


/// Get expired inbox record for a previously existing inbox
/// Use the inboxId to return an ExpiredInboxRecord if an inbox has expired. Inboxes expire and are disabled if an expiration date is set or plan requires. Returns 404 if no expired inbox is found for the inboxId
///
/// @param inboxId ID of inbox you want to retrieve (not the inbox ID)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return OAIExpiredInboxDto*
-(NSURLSessionTask*) getExpiredInboxByInboxIdWithInboxId: (NSString*) inboxId
    completionHandler: (void (^)(OAIExpiredInboxDto* output, NSError* error)) handler;


/// Get an expired inbox record
/// Inboxes created with an expiration date will expire after the given date and be moved to an ExpiredInbox entity. You can still read emails in the inbox but it can no longer send or receive emails. Fetch the expired inboxes to view the old inboxes properties
///
/// @param expiredId ID of the ExpiredInboxRecord you want to retrieve. This is different from the ID of the inbox you are interested in. See other methods for getting ExpiredInboxRecord for an inbox inboxId)
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return OAIExpiredInboxDto*
-(NSURLSessionTask*) getExpiredInboxRecordWithExpiredId: (NSString*) expiredId
    completionHandler: (void (^)(OAIExpiredInboxDto* output, NSError* error)) handler;


/// List records of expired inboxes
/// Inboxes created with an expiration date will expire after the given date. An ExpiredInboxRecord is created that records the inboxes old ID and email address. You can still read emails in the inbox (using the inboxes old ID) but the email address associated with the inbox can no longer send or receive emails. Fetch expired inbox records to view the old inboxes properties
///
/// @param page Optional page index in inbox sent email list pagination (optional) (default to @0)
/// @param size Optional page size in inbox sent email list pagination (optional) (default to @20)
/// @param sort Optional createdAt sort direction ASC or DESC (optional) (default to @"ASC")
/// 
///  code:200 message:"OK",
///  code:401 message:"Unauthorized",
///  code:403 message:"Forbidden",
///  code:404 message:"Not Found"
///
/// @return OAIPageExpiredInboxRecordProjection*
-(NSURLSessionTask*) getExpiredInboxesWithPage: (NSNumber*) page
    size: (NSNumber*) size
    sort: (NSString*) sort
    completionHandler: (void (^)(OAIPageExpiredInboxRecordProjection* output, NSError* error)) handler;



@end
