#import <Foundation/Foundation.h>
#import "OAIContactDto.h"
#import "OAIContactProjection.h"
#import "OAICreateContactOptions.h"
#import "OAIPageContactProjection.h"
#import "OAIApi.h"

/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://docs.mailslurp.com/) - [Examples](https://github.com/mailslurp/examples) repository
*
* The version of the OpenAPI document: 6.5.2
* Contact: contact@mailslurp.dev
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/



@interface OAIContactControllerApi: NSObject <OAIApi>

extern NSString* kOAIContactControllerApiErrorDomain;
extern NSInteger kOAIContactControllerApiMissingParamErrorCode;

-(instancetype) initWithApiClient:(OAIApiClient *)apiClient NS_DESIGNATED_INITIALIZER;

/// Create a contact
/// 
///
/// @param createContactOptions 
/// 
///  code:201 message:"Created"
///
/// @return OAIContactDto*
-(NSURLSessionTask*) createContactWithCreateContactOptions: (OAICreateContactOptions*) createContactOptions
    completionHandler: (void (^)(OAIContactDto* output, NSError* error)) handler;


/// Delete contact
/// 
///
/// @param contactId 
/// 
///  code:204 message:"No Content"
///
/// @return void
-(NSURLSessionTask*) deleteContactWithContactId: (NSString*) contactId
    completionHandler: (void (^)(NSError* error)) handler;


/// Get all contacts
/// 
///
/// @param page Optional page index in list pagination (optional) (default to @0)
/// @param size Optional page size in list pagination (optional) (default to @20)
/// @param sort Optional createdAt sort direction ASC or DESC (optional) (default to @"ASC")
/// @param since Filter by created at after the given timestamp (optional)
/// @param before Filter by created at before the given timestamp (optional)
/// @param search Search terms (optional)
/// 
///  code:200 message:"OK"
///
/// @return OAIPageContactProjection*
-(NSURLSessionTask*) getAllContactsWithPage: (NSNumber*) page
    size: (NSNumber*) size
    sort: (NSString*) sort
    since: (NSDate*) since
    before: (NSDate*) before
    search: (NSString*) search
    completionHandler: (void (^)(OAIPageContactProjection* output, NSError* error)) handler;


/// Get contact
/// 
///
/// @param contactId 
/// 
///  code:200 message:"OK"
///
/// @return OAIContactDto*
-(NSURLSessionTask*) getContactWithContactId: (NSString*) contactId
    completionHandler: (void (^)(OAIContactDto* output, NSError* error)) handler;


/// Get contact vCard vcf file
/// 
///
/// @param contactId 
/// 
///  code:200 message:"OK"
///
/// @return void
-(NSURLSessionTask*) getContactVCardWithContactId: (NSString*) contactId
    completionHandler: (void (^)(NSError* error)) handler;


/// Get all contacts
/// 
///
/// 
///  code:200 message:"OK"
///
/// @return NSArray<OAIContactProjection>*
-(NSURLSessionTask*) getContactsWithCompletionHandler: 
    (void (^)(NSArray<OAIContactProjection>* output, NSError* error)) handler;



@end
