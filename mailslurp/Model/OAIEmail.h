#import <Foundation/Foundation.h>
#import "OAIObject.h"

/**
* MailSlurp API
* MailSlurp is an API for sending and receiving emails from dynamically allocated email addresses. It's designed for developers and QA teams to test applications, process inbound emails, send templated notifications, attachments, and more.  ## Resources  - [Homepage](https://www.mailslurp.com) - Get an [API KEY](https://app.mailslurp.com/sign-up/) - Generated [SDK Clients](https://www.mailslurp.com/docs/) - [Examples](https://github.com/mailslurp/examples) repository 
*
* The version of the OpenAPI document: 6.5.2
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#import "OAIEmailAnalysis.h"
@protocol OAIEmailAnalysis;
@class OAIEmailAnalysis;



@protocol OAIEmail
@end

@interface OAIEmail : OAIObject


@property(nonatomic) OAIEmailAnalysis* analysis;
/* List of IDs of attachments found in the email. Use these IDs with the Inbox and Email Controllers to download attachments and attachment meta data such as filesize, name, extension. [optional]
 */
@property(nonatomic) NSArray<NSString*>* attachments;
/* List of `BCC` recipients email was addressed to [optional]
 */
@property(nonatomic) NSArray<NSString*>* bcc;
/* The body of the email message [optional]
 */
@property(nonatomic) NSString* body;
/* A hash signature of the email message [optional]
 */
@property(nonatomic) NSString* bodyMD5Hash;
/* List of `CC` recipients email was addressed to [optional]
 */
@property(nonatomic) NSArray<NSString*>* cc;
/* Detected character set of the email body such as UTF-8 [optional]
 */
@property(nonatomic) NSString* charset;
/* When was the email received by MailSlurp [optional]
 */
@property(nonatomic) NSDate* createdAt;
/* Who the email was sent from [optional]
 */
@property(nonatomic) NSString* from;
/* Collection of SMTP headers attached to email [optional]
 */
@property(nonatomic) NSDictionary<NSString*, NSString*>* headers;
/* ID of the email entity [optional]
 */
@property(nonatomic) NSString* _id;
/* ID of the inbox that received the email [optional]
 */
@property(nonatomic) NSString* inboxId;
/* Is the email body HTML [optional]
 */
@property(nonatomic) NSNumber* isHTML;
/* Read flag. Has the email ever been viewed in the dashboard or fetched via the API? If so the email is marked as read. [optional]
 */
@property(nonatomic) NSNumber* read;
/* The `replyTo` field on the received email message [optional]
 */
@property(nonatomic) NSString* replyTo;
/* The subject line of the email message [optional]
 */
@property(nonatomic) NSString* subject;
/* Can the email be accessed by organization team members [optional]
 */
@property(nonatomic) NSNumber* teamAccess;
/* List of `To` recipients that email was addressed to [optional]
 */
@property(nonatomic) NSArray<NSString*>* to;
/* When was the email last updated [optional]
 */
@property(nonatomic) NSDate* updatedAt;
/* ID of user that email belongs to [optional]
 */
@property(nonatomic) NSString* userId;

@end
